--- ./config.make.in
+++ ./config.make.in
@@ -36,7 +36,7 @@
 RANLIB=@RANLIB@
 XA=.a
 XB=
-XE=
+XE=@EXE@
 XO=.o
 XS=@XS@
 TOOLCHAIN=unix
--- ./configure
+++ ./configure
@@ -3098,11 +3098,11 @@
 fi
 
 
-if test "`$OCAMLFIND printconf stdlib`" != "`$CAMLC -where`"; then
-  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: Ignoring ocamlfind" >&5
-printf "%s\n" "$as_me: WARNING: Ignoring ocamlfind" >&2;}
-  OCAMLFIND=no
-fi
+#if test "`$OCAMLFIND printconf stdlib`" != "`$CAMLC -where`"; then
+#  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: WARNING: Ignoring ocamlfind" >&5
+#printf "%s\n" "$as_me: WARNING: Ignoring ocamlfind" >&2;}
+#  OCAMLFIND=no
+#fi
 
 if test "$OCAMLFIND" = no; then
 FINDLIBDIR=""
--- ./src/Makefile
+++ ./src/Makefile
@@ -4,7 +4,7 @@
 LINKER = $(CAMLC) $(MLFLAGS) $(MLBYTEFLAGS) -w s-3-6+52
 COMPOPT = $(CAMLOPT) $(MLFLAGS) -w s-3-6+52 -c
 LINKOPT = $(CAMLOPT) $(MLFLAGS)
-LIBRARIAN = $(CAMLMKLIB) -verbose -ocamlc "$(CAMLC)" -ocamlopt "$(CAMLOPT)"
+LIBRARIAN = $(CAMLMKLIB) -verbose -ocamlc "$(CAMLC)" -ocamlopt "$(CAMLOPT)" -ldopt -link -ldopt -Wl,-s
 TOPLEVEL = $(CAMLMKTOP) $(MLFLAGS)
 CAMLP4 = $(CAMLP4O) pr_o.cmo
 
--- ./src/glib.ml
+++ ./src/glib.ml
@@ -72,6 +72,8 @@
   type id
   external channel_of_descr : Unix.file_descr -> channel
     = "ml_g_io_channel_unix_new"
+  external channel_of_descr_socket : Unix.file_descr -> channel
+    = "ml_g_io_channel_unix_new_socket"
   external remove : id -> unit = "ml_g_source_remove"
   external add_watch :
     cond:condition list -> callback:(condition list -> bool) -> ?prio:int -> channel -> id
--- ./src/glib.mli
+++ ./src/glib.mli
@@ -75,6 +75,7 @@
   type condition = [ `ERR | `HUP | `IN | `NVAL | `OUT | `PRI]
   type id
   val channel_of_descr : Unix.file_descr -> channel
+  val channel_of_descr_socket : Unix.file_descr -> channel
   val add_watch :
     cond:condition list -> callback:(condition list -> bool) -> ?prio:int -> channel -> id
   val remove : id -> unit
--- ./src/ml_glib.c
+++ ./src/ml_glib.c
@@ -25,6 +25,8 @@
 #include <string.h>
 #include <locale.h>
 #ifdef _WIN32
+/* to kill a #warning: include winsock2.h before windows.h */
+#include <winsock2.h>
 #include "win32.h"
 #include <wtypes.h>
 #include <io.h>
@@ -38,6 +40,11 @@
 #include <caml/callback.h>
 #include <caml/threads.h>
 
+#ifdef _WIN32
+/* for Socket_val */
+#include <caml/unixsupport.h>
+#endif
+
 #include "wrappers.h"
 #include "ml_glib.h"
 #include "glib_tags.h"
@@ -330,14 +337,23 @@
 
 #ifndef _WIN32
 ML_1 (g_io_channel_unix_new, Int_val, Val_GIOChannel_noref)
+CAMLprim value ml_g_io_channel_unix_new_socket (value arg1) {
+  return Val_GIOChannel_noref (g_io_channel_unix_new (Int_val (arg1))); 
+}
 
 #else
 CAMLprim value ml_g_io_channel_unix_new(value wh)
 {
   return Val_GIOChannel_noref
-    (g_io_channel_unix_new
+    (g_io_channel_win32_new_fd
      (_open_osfhandle((long)*(HANDLE*)Data_custom_val(wh), O_BINARY)));
 }
+
+CAMLprim value ml_g_io_channel_unix_new_socket(value wh)
+{
+  return Val_GIOChannel_noref
+    (g_io_channel_win32_new_socket(Socket_val(wh)));
+}
 #endif
 
 static gboolean ml_g_io_channel_watch(GIOChannel *s, GIOCondition c,
