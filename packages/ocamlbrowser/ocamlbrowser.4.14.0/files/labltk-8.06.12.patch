--- ./INSTALL
+++ ./INSTALL
@@ -90,4 +90,8 @@
 1- In the config subdirectory, overwrite Makefile with the file
 corresponding to your system
 
-2- Continue from step 2 above
+2- Continue similar to step 2 above
+
+        make -f Makefile.nt all
+        make -f Makefile.nt opt
+        make -f Makefile.nt install
--- ./Makefile.nt
+++ ./Makefile.nt
@@ -17,12 +17,18 @@
 # Top Makefile for LablTk
 
 include config/Makefile
+MAKEREC?=$(MAKE) -f Makefile.nt
+MAKECMD?=$(MAKE)
 
+SUBDIRS=compiler support lib labltk camltk jpf frx examples_labltk examples_camltk browser
 
 
-SUBDIRS=compiler support lib labltk camltk jpf frx examples_labltk examples_camltk browser
+all: library
+	cd browser ; $(MAKEREC)
+
+opt: libraryopt
 
-all:
+library:
 	cd support ; $(MAKEREC)
 	cd compiler ; $(MAKEREC)
 	cd labltk ; $(MAKECMD) -f Makefile.gen.nt
@@ -32,9 +38,8 @@
 	cd lib ; $(MAKEREC)
 	cd jpf ; $(MAKEREC)
 	cd frx ; $(MAKEREC)
-	cd browser ; $(MAKEREC)
 
-allopt:
+libraryopt:
 	cd support ; $(MAKEREC) opt
 	cd labltk ; $(MAKECMD) -f Makefile.gen.nt
 	cd labltk ; $(MAKEREC) opt
@@ -44,7 +49,13 @@
 	cd jpf ; $(MAKEREC) opt
 	cd frx ; $(MAKEREC) opt
 
-.PHONY: examples_labltk examples_camltk
+byte: all
+opt: allopt
+
+.PHONY: all allopt byte opt library libraryopt
+.PHONY: labltk examples examples_labltk examples_camltk
+.PHONY: install installopt install-browser partialclean clean
+
 
 examples: examples_labltk examples_camltk
 
@@ -55,14 +66,18 @@
 	cd examples_camltk; $(MAKE) all
 
 install:
-	cd labltk ; $(MAKEREC) install
-	cd camltk ; $(MAKEREC) install
-	cd lib ; $(MAKEREC) install
-	cd support ; $(MAKEREC) install
-	cd compiler ; $(MAKEREC) install
-	cd jpf ; $(MAKEREC) install
-	cd frx ; $(MAKEREC) install
-	cd browser ; $(MAKEREC) install
+	cd support; $(MAKE) install
+	cd lib; $(MAKE) install
+	cd labltk; $(MAKE) install
+	cd camltk; $(MAKE) install
+	cd compiler; $(MAKE) install
+	cd jpf; $(MAKE) install
+	cd frx; $(MAKE) install
+	cd browser; $(MAKE) install
+	if test -f lib/labltk.cmxa; then $(MAKE) installopt; else :; fi
+
+install-browser:
+	cd browser; $(MAKE) install
 
 installopt:
 	cd support ; $(MAKEREC) installopt
--- ./browser/Makefile.nt
+++ ./browser/Makefile.nt
@@ -14,6 +14,9 @@
 
 # $Id$
 
+BYTECC?=$(CC)
+BYTECCCOMPOPTS?=$(CFLAGS) $(OCAMLC_CFLAGS)
+
 CCFLAGS=-I$(LIBDIR)/caml $(TK_DEFS)
 
 include ../support/Makefile.common
@@ -25,7 +28,8 @@
 endif
 
 XTRAOBJ=winmain.$(O)
-XTRALIBS=threads.cma -custom $(WINDOWS_APP)
+XTRALIBS=-I +threads threads.cma -custom $(WINDOWS_APP)
+XTRASWITCH= -thread
 
 include Makefile.shared
 
--- ./browser/Makefile.shared
+++ ./browser/Makefile.shared
@@ -32,7 +32,7 @@
 .SUFFIXES: .ml .mli .cmo .cmi .cmx .c .$(O)
 
 .ml.cmo:
-	$(CAMLCOMP) $(INCLUDES) $<
+	$(CAMLCOMP) $(XTRASWITCH) $(INCLUDES) $<
 
 .mli.cmi:
 	$(CAMLCOMP) $(INCLUDES) $<
--- ./browser/winmain.c
+++ ./browser/winmain.c
@@ -17,7 +17,8 @@
 #include <windows.h>
 #include <mlvalues.h>
 #include <callback.h>
-#include <sys.h>
+/* #include <sys.h> */
+CAMLextern value caml_sys_exit (value);
 
 /*CAMLextern int __argc; */
 /* CAMLextern char **__argv; */
@@ -27,14 +28,14 @@
 int WINAPI WinMain(HINSTANCE h, HINSTANCE HPrevInstance,
                    LPSTR lpCmdLine, int nCmdShow)
 {
-  char exe_name[1024];
-  char * argv[2];
+  wchar_t exe_name[1024];
+  wchar_t * argv[2];
 
-  GetModuleFileName(NULL, exe_name, sizeof(exe_name) - 1);
+  GetModuleFileNameW(NULL, exe_name, (sizeof(exe_name)/sizeof(exe_name[0]) - 1));
   exe_name[sizeof(exe_name) - 1] = '0';
   argv[0] = exe_name;
   argv[1] = NULL;
   caml_main(argv);
-  sys_exit(Val_int(0));
+  caml_sys_exit(Val_int(0));
   return 0;
 }
--- ./frx/Makefile
+++ ./frx/Makefile
@@ -24,6 +24,7 @@
       frx_after.cmo frx_fit.cmo frx_ctext.cmo frx_color.cmo
 
 OBJSX = $(OBJS:.cmo=.cmx)
+RANLIB ?= ranlib
 
 all: frxlib.cma
 
@@ -40,14 +41,14 @@
 	ocamlfind install labltk -add *.cmi *.mli frxlib.cma
 installopt:
 	ocamlfind install labltk -add frxlib.cmxa frxlib.$(A) *.cmx
-	cd $(INSTALLDIR); ranlib frxlib.$(A)
+	cd $(INSTALLDIR); $(RANLIB) frxlib.$(A)
 else
 install:
 	cp *.cmi *.mli frxlib.cma $(INSTALLDIR)
 
 installopt:
 	cp frxlib.cmxa frxlib.$(A) *.cmx $(INSTALLDIR)
-	cd $(INSTALLDIR); ranlib frxlib.$(A)
+	cd $(INSTALLDIR); $(RANLIB) frxlib.$(A)
 endif
 
 clean:
--- ./support/cltkFile.c
+++ ./support/cltkFile.c
@@ -124,14 +124,14 @@
   CheckInit();
   Tcl_CreateChannelHandler(tcl_channel(fd, TCL_READABLE),
                            TCL_READABLE,
-                           FileProc, (ClientData) (Int_val(cbid)));
+                           FileProc, (ClientData) (Long_val(cbid)));
   return Val_unit;
 }
 
 CAMLprim value camltk_rem_file_input(value fd, value cbid)
 {
   Tcl_DeleteChannelHandler(tcl_channel(fd, TCL_READABLE),
-                           FileProc, (ClientData) (Int_val(cbid)));
+                           FileProc, (ClientData) (Long_val(cbid)));
   return Val_unit;
 }
 
@@ -140,14 +140,14 @@
   CheckInit();
   Tcl_CreateChannelHandler(tcl_channel(fd, TCL_WRITABLE),
                            TCL_WRITABLE,
-                           FileProc, (ClientData) (Int_val(cbid)));
+                           FileProc, (ClientData) (Long_val(cbid)));
   return Val_unit;
 }
 
 CAMLprim value camltk_rem_file_output(value fd, value cbid)
 {
   Tcl_DeleteChannelHandler(tcl_channel(fd, TCL_WRITABLE),
-                           FileProc, (ClientData) (Int_val(cbid)));
+                           FileProc, (ClientData) (Long_val(cbid)));
   return Val_unit;
 }
 
--- ./support/cltkMain.c
+++ ./support/cltkMain.c
@@ -28,6 +28,11 @@
 #ifdef HAS_UNISTD
 #include <unistd.h>  /* for R_OK */
 #endif
+#ifdef _WIN32
+/* defined in io.h -> name clash with caml/io.h */
+extern int _access(const char *path,int mode);  
+#define access _access
+#endif
 #include "camltk.h"
 
 #ifndef R_OK
